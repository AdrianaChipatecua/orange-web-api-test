name: Dav-Orange-Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      entorno:
        description: 'Test execution environment'
        type: choice
        options:
          - web
          - api
        required: true
        default: 'web'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: web

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-


      - name: Install Chrome and ChromeDriver
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get update
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          CHROMEDRIVER_VERSION=$(curl -sS https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json | jq -r --arg ver "$CHROME_VERSION" '.versions[] | select(.version | startswith($ver)) | .downloads.chromedriver[] | select(.platform=="linux64") | .url' | tail -n 1)
          wget -N $CHROMEDRIVER_VERSION
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Run scenarios
        env:
          RUN_ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.entorno || 'web' }}
          WEB_URL: ${{ secrets.WEB_URL }}
          SUCCESSFUL_USER: ${{ secrets.SUCCESSFUL_USER }}
          SUCCESSFUL_PASSWORD: ${{ secrets.SUCCESSFUL_PASSWORD }}
          BASE_ENDPOINT: ${{ secrets.BASE_ENDPOINT }}
          USER_TOKEN: ${{ secrets.USER_TOKEN }}
        run: |
          echo "âœ… Running tests for environment: ${{ env.RUN_ENVIRONMENT }}"
    
          if [ "${{ env.RUN_ENVIRONMENT }}" == "web" ]; then
            mvn clean verify -Denvironment="web" -Dcucumber.filter.tags="@createEmployee-web" -DskipTests=false -B -e || true
          elif [ "${{ env.RUN_ENVIRONMENT }}" == "api" ]; then
            mvn clean verify -Denvironment="api" -Dcucumber.filter.tags="@test-api" -DskipTests=false -B -e || true
          fi

      - name: Upload Serenity Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-test-report-${{ github.run_id }}
          path: target/site/serenity
          retention-days: 7

      - name: Upload Failsafe Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: failsafe-reports-${{ github.run_id }}
          path: target/failsafe-reports
          retention-days: 7