# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dav-Orange-Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      entorno:
        description: 'Test execution environment'
        type: choice
        options:
          - web
          - api
        required: true  

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Install Chrome
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb || true
        sudo apt install ./google-chrome-stable_current_amd64.deb || true
    - name: Check Chrome Version
      run: |
        google-chrome --version || true
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | sed -E 's/Google Chrome ([0-9]+).*/\1/')
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        wget "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" || true
        unzip chromedriver_linux64.zip || true
        sudo mv chromedriver /usr/local/bin/ || true
        sudo chmod +x /usr/local/bin/chromedriver || true
    - name: Run scenarios
      env:
        WEB_URL: ${{ secrets.WEB_URL }}
        SUCCESSFUL_USER: ${{ secrets.SUCCESSFUL_USER_NAME }}
        SUCCESSFUL_PASSWORD: ${{ secrets.SUCCESSFUL_PASSWORD }}
        BASE_ENDPOINT: ${{ secrets.BASE_ENDPOINT }}
        USER_TOKEN: ${{ secrets.USER_TOKEN }}
      run: |
        if [ "${{ inputs.entorno }}" == "web" ]; then
          mvn clean verify -Denvironment="web" -Dcucumber.filter.tags="@createEmployee-web" -DskipTests=false
        elif [ "${{ inputs.entorno }}" == "api" ]; then
          mvn clean verify -Denvironment="api" -Dcucumber.filter.tags="@test-api" -DskipTests=false
        fi
    - name: List Serenity Report
      run: ls -R target/site/serenity || echo "No files found"
    - name: UploadReport
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Generate report
        path: target/site/serenity
